import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java-library'
    id 'jacoco'
//    id 'maven-publish'
//    id 'signing'
    id "com.vanniktech.maven.publish" version "0.31.0"
}

group = 'de.codebarista'
version = '0.0.1'

java {
//    withJavadocJar()
//    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    testImplementation 'org.xmlunit:xmlunit-core:2.10.0'
    testImplementation 'org.xmlunit:xmlunit-assertj:2.10.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

mavenPublishing {
//    coordinates(
//            groupId = group as String,
//            artifactId = name,
//            version = version as String
//    )

    pom {
        name.set("Gallop")
        description.set("Java library for creating electronic invoices compliant to the XRechnung standard")
        url.set("https://github.com/codebarista-de/gallop")

        licenses {
            license {
                name.set("MIT License")
                url.set("https://opensource.org/licenses/MIT")
            }
        }

        developers {
            developer {
                id.set("codebarista.de")
                name.set("Codebarista")
            }
        }

        scm {
            connection.set("scm:git:https://github.com/codebarista-de/gallop.git")
            developerConnection.set("scm:git:ssh://github.com/codebarista-de/gallop.git")
            url.set("https://github.com/codebarista-de/gallop")
        }
    }

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
    signAllPublications()
}


//repositories {
//    maven {
//        name = "MavenCentral"
//        url = uri("https://central.sonatype.com/api/v1/publisher/maven")
//        credentials {
//            username = findProperty("mavenCentralUsername") ?: System.getenv("MAVENCENTRAL_USERNAME")
//            password = findProperty("mavenCentralPassword") ?: System.getenv("MAVENCENTRAL_PASSWORD")
//        }
//    }
//}


//signing {
//    useInMemoryPgpKeys(
//            findProperty("signingKeyId"),
//            findProperty("signingKey"),
//            findProperty("signingPassword")
//    )
//    sign publishing.publications.mavenJava
//}

tasks.register('printVersion') {
    doLast {
        println project.version
    }
}
